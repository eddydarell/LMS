@using Microsoft.AspNet.Identity;
@model LMS_Grupp4.Models.LMS_Models.Course

@{
    ViewBag.Title = Model.CourseName + "Details";
    var roleManager = new LMS_Grupp4.Repositories.LMSRepository().GetRoleManager();
    var teacherRoleID = roleManager.FindByName("teacher").Id;
    bool applicationExists = Model.CourseApplications.Any(ca => ca.Student.Id == User.Identity.GetUserId() && ca.Status == false);
    bool isAlreadyInCourse = Model.Users.Any(u => u.Id == User.Identity.GetUserId());

    int totalAssignmentCount = Model.Assignments.Count;
    int doneAssignmentCount = Model.Assignments.Count(a => a.Evaluations.Any(e => e.Student.Id == User.Identity.GetUserId()));


    int assignmentCount = 0;
    double cumulPercentage = 0.00;
    double percentage = 0.00;


    foreach(var assignment in Model.Assignments)
    {
        assignmentCount++;
        foreach (var eval in assignment.Evaluations)
        {
            if(eval.Student.Id == User.Identity.GetUserId())
            {

                if(eval.Percentage == null )
                {
                    eval.Percentage = 0;
                    cumulPercentage += (double)eval.Percentage;
                }
                else
                {
                    cumulPercentage += (double)eval.Percentage;
                }
            }
        }
    }

    percentage = Math.Round(cumulPercentage / assignmentCount);

    string mark = "";

    if (percentage >= 90)
    {
        mark = "A";
    }
    else if (percentage < 90 && percentage >= 80)
    {
        mark = "B";
    }
    else if (percentage < 80 && percentage >= 70)
    {
        mark = "C";
    }
    else if (percentage < 70 && percentage >= 60)
    {
        mark = "D";
    }
    else if (percentage < 60 && percentage >= 50)
    {
        mark = "E";
    }
    else if (percentage < 50 && percentage >= 40)
    {
        mark = "Fx";
    }
    else
    {
        mark = "F";
    }
}
<div class="row" style="padding-bottom: 20px">
    <div class="col-md-4">
        <small>
            Student ID: @User.Identity.GetUserId()
        </small>
    </div>
    <div class="col-md-4 text-center">
        <small>Course Details</small>
    </div>
    <div class="col-lg-4 text-right">
        <small>@DateTime.Now.DayOfWeek, @DateTime.Now.Date.Day @DateTime.Now.Year</small>
    </div>
</div>
<div class="jumbotron">
    <h2>@Model.CourseName</h2>
    <p>
        @Model.Description
    </p>
</div>
<hr />
<div class="row">
    <div class="col-md-8">
        <div class="panel panel-info">
            <div class="panel-heading">
                <div class="panel-title">
                    <h4 class="text-center">Details</h4>
                </div>
            </div>
            <div class="panel-body">

                <dl class="dl-horizontal">
                    <dt>
                        Percentage
                    </dt>

                    <dd>
                        @percentage %
                        @if (doneAssignmentCount < totalAssignmentCount)
                        {
                            <div class="alert alert-danger">
                                <small>You have undone assignments! <span class="glyphicon glyphicon-exclamation-sign"></span></small>
                            </div>
                        }
                        
                    </dd>
                    <dt>
                        Mark
                    </dt>
                    <dd>
                        @mark 
                        @if (doneAssignmentCount < totalAssignmentCount)
                        {
                            <div class="alert alert-danger">
                                <small>You have undone assignments! <span class="glyphicon glyphicon-exclamation-sign"></span></small>
                            </div>
                        }
                    </dd>
                    <dt>
                        Total Assignments
                    </dt>

                    <dd>
                        @totalAssignmentCount
                    </dd>
                    <dt>
                        Done Assignments
                    </dt>

                    <dd>
                        @doneAssignmentCount
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.CourseName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.CourseName)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>
                    <dt>
                        Teachers
                    </dt>

                    <dd>
                        <ul>
                            @foreach (var user in Model.Users.Where(u => u.Roles.Any(r => r.RoleId == teacherRoleID)).ToList())
                            {
                                <li><a href="@Url.Action("Details", "Teacher", new { id = user.Id})">@user.RealName</a></li>
                            }
                        </ul>
                    </dd>
                </dl>

                <hr />
                <div class="btn-toolbar">
                    <div class="btn-group">
                        @if (!applicationExists && !isAlreadyInCourse)
                        {
                            <a href="@Url.Action("Apply", "CourseApplication", new { id = Model.ID })" class="btn btn-success">Apply For Course <span class="glyphicon glyphicon-save"></span></a>
                        }
                    </div>
                    <div class="btn-group">
                        @if (isAlreadyInCourse)
                        {
                            <a href="@Url.Action("IndexCourse", "Assignment", new { courseID = Model.ID })" class="btn btn-default">View assignments</a>
                            <a href="@Url.Action("Upload", "File", new { id = Model.ID })" class="btn btn-primary">Upload File <span class="glyphicon glyphicon-upload"></span></a>
                        }
                    </div>
                </div>
            </div>
            <div class="panel-footer warning">
                <small>
                    <span style="color: red" class="glyphicon glyphicon-exclamation-sign"></span> Note that every undone assignment is evaluated as a 0.
                </small>
                @if (applicationExists)
                {
                    <small>
                        You have a pending application for this course.<br />
                        Refer to your applications <a href="@Url.Action("Index", "CourseApplication")">page</a> to view it.
                    </small>

                }
            </div>
        </div>
        <a href="@Url.Action("Index", "Course")" >Back To List</a>
    </div>
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="panel-title">
                    <h4 class="text-center">Actual Schema</h4>
                </div>
            </div>
            <div class="panel-body">
                <p>
                    Schema valid for the period:<br />
                    <b>@Model.ClassSchema.StartDate</b> to <b>@Model.ClassSchema.EndDate</b>.
                </p>
                <hr />
                <div class="schedule-box">
                    @Html.Raw(Model.ClassSchema.Schedule)
                </div>
            </div>
        </div>
    </div>
</div>
